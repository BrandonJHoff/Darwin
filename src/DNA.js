// const ACCEPT_PROBABILITY = 0.01
const MUTATION_MAG = 0.1
const MUTATION_RATE = 0.05

// ########################################################################################
// ──── CREATE ────────────────────────────────────────────────────────────────────────────
// ########################################################################################
const create = ({ P5 }) => ({ lifespan, p5 }) => {
  return {
    lifespan,
    genes: Array(lifespan).fill(0).map(() => P5.Vector.random2D().setMag(MUTATION_MAG)),
    fitness: 0
  }
}

// ########################################################################################
// ──── BREED ─────────────────────────────────────────────────────────────────────────────
// ########################################################################################
const breed = ({ P5 }) => ({ dna1, dna2, p5 }) => ({
  lifespan: dna1.lifespan,
  genes: mutate({ genes: dna1.genes.map((g, i) => Math.random() < 0.5 ? g : dna2.genes[i]), P5 }),
  fitness: 0
})

// ########################################################################################
// ──── MUTATE ────────────────────────────────────────────────────────────────────────────
// ########################################################################################
const mutate = ({ genes, P5 }) =>
  genes.map(g =>
    Math.random(0, 1) < MUTATION_RATE
      ? P5.Vector.random2D().setMag(MUTATION_MAG)
      : g
  )

// ########################################################################################
// ──── DNA ───────────────────────────────────────────────────────────────────────────────
// ########################################################################################
const DNA = ({ P5 }) => ({
  create: create({ P5 }),
  breed: breed({ P5 })
})

export default DNA
